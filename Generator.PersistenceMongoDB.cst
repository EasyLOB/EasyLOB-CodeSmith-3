<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="CodeSmithHelper.cs" Inherits="XCodeSmith.CodeSmithHelper" Debug="False" Description="" %>

<%@ Property Name="Application" Type="String" Category="Application" Description="Application" %>
<%@ Property Name="Namespace" Type="String" Category="Application" Description="Namespace [using Application.*]" %>

<%@ Property Name="Culture" Type="XCodeSmith.Cultures" Category="Context" Description="Culture for Plural Rules" %>
<%@ Property Name="Output" Type="String" Category="Context" Description="Output Directory" %>

<%@ Property Name="SourceTables" Type="SchemaExplorer.TableSchemaCollection" Category="Database" Description="Tables" %>

<%@ Property Name="DoPersistenceMongoDBMap" Type="Boolean" Default="False" Category="To-Do" Description="Generate Persistence :: MongoDB Maps ?" %>
<%@ Property Name="DoPersistenceMongoDBGenericRepository" Type="Boolean" Default="False" Category="To-Do" Description="Generate Persistence :: MongoDB Generic Repository ?" %>
<%@ Property Name="DoPersistenceMongoDBRepository" Type="Boolean" Default="False" Category="To-Do" Description="Generate Persistence :: MongoDB Repository ?" %>
<%@ Property Name="DoPersistenceMongoDBUnitOfWork" Type="Boolean" Default="False" Category="To-Do" Description="Generate Persistence :: MongoDB Unit of Work ?" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%
if (DoPersistenceMongoDBMap)
{
    GeneratePersistenceMongoDBMap(SourceTables, Application, Namespace, Output, Culture);
}

if (DoPersistenceMongoDBGenericRepository)
{
    GeneratePersistenceMongoDBGenericRepository(SourceTables, Application, Namespace, Output, Culture);    
}

if (DoPersistenceMongoDBRepository)
{
    GeneratePersistenceMongoDBRepository(SourceTables, Application, Namespace, Output, Culture);
}

if (DoPersistenceMongoDBUnitOfWork)
{
    GeneratePersistenceMongoDBUnitOfWork(SourceTables, Application, Namespace, Output, Culture);
}
%>