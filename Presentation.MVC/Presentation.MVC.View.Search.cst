<%@ CodeTemplate Language="C#" TargetLanguage="C#" Src="..\CodeSmithHelper.cs" Inherits="XCodeSmith.CodeSmithHelper" Debug="False" Description="" %>

<%@ Property Name="Application" Type="String" Category="Application" Description="Application" %>
<%@ Property Name="Namespace" Type="String" Category="Application" Description="Namespace [using Application.*]" %>

<%@ Property Name="Culture" Type="XCodeSmith.Cultures" Category="Context" Description="Culture for Plural Rules" %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Database" Description="Table" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%
if (SourceTable.PrimaryKey == null) {
    throw new ApplicationException("SourceTable does not contain a primary key.");
}
      
string tableName = TableName(SourceTable.FullName);
string className = ClassName(SourceTable.FullName, Culture);
string objectName = ObjectName(SourceTable.FullName, Culture);
%>
@model <%= className %>CollectionModel

@{
    string CSHTML = "<%= className %> - Search.cshtml";

    string controllerAction = Model.ControllerAction.ToLower();
    string controllerActionResource = PresentationResources.ResourceManager.GetString(Model.ControllerAction);

    string pageTitle = AppHelper.PageTitle(<%= className %>Resources.EntitySingular, controllerAction, controllerActionResource, Model.IsMasterDetail);
    string documentTitle = AppHelper.DocumentTitle(pageTitle, Model.IsMasterDetail);
}

<h4>@pageTitle</h4>

<div class="form-inline" style = "display: none;">
    @{ Html.RenderPartial("_<%= className %>Collection", Model); }
</div>

<script>
    $(function () {
        try {
            var url = zUrlDictionaryRead("<%= className %>"); // Master-Detail
            if (!url) {
                zUrlDictionaryWrite("<%= className %>", "@Context.Request.Url.AbsoluteUri");
            }
        } catch (exception) {
            zAlert(zExceptionMessage("@CSHTML", "function", exception.message));
        }
    });
</script>