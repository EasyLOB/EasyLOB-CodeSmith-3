<%@ CodeTemplate Language="C#" TargetLanguage="C#" Src="..\CodeSmithHelper.cs" Inherits="XCodeSmith.CodeSmithHelper" Debug="False" Description="" %>

<%@ Property Name="Application" Type="String" Category="Application" Description="Application" %>
<%@ Property Name="Namespace" Type="String" Category="Application" Description="Namespace [using Application.*]" %>

<%@ Property Name="Culture" Type="XCodeSmith.Cultures" Category="Context" Description="Culture for Plural Rules" %>

<%@ Property Name="SourceTables" Type="SchemaExplorer.TableSchemaCollection" Category="Database" Description="Tables" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
using <%= Application %>.Data;
using LinqToDB;
using LinqToDB.Data;

namespace <%= Namespace %>
{
    public class <%= Application %>LINQ2DB : DataConnection
    {
        #region Methods
    
        public <%= Application %>LINQ2DB()
            : base("<%= Application %>")
        {
<%  foreach (TableSchema table in SourceTables) { %>
            <%= Application %>LINQ2DBMap.<%= ClassName(table.Name, Culture) %>Map(MappingSchema);
<%  } %>
        }
<%  foreach (TableSchema table in SourceTables) {
        string className = ClassName(table.Name, Culture); %>

        public ITable<<%= className %>> <%= className %>
        {
            get { return GetTable<<%= className %>>(); }
        }
<%  } %>

        #endregion Methods
    }
}